<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.asgard.infra.mapper.QuartzTaskInstanceMapper">

    <select id="selectLastInstance" resultType="io.choerodon.asgard.infra.dto.QuartzTaskInstanceDTO">
     SELECT id, status, actual_start_time,planned_next_time, execute_result,object_version_number FROM asgard_quartz_task_instance
     WHERE task_id = #{taskId}
     ORDER BY CREATION_DATE DESC
     LIMIT 1
    </select>

    <select id="selectLastInstance" databaseId="mysql" resultType="io.choerodon.asgard.infra.dto.QuartzTaskInstanceDTO">
     SELECT id, status, actual_start_time,planned_next_time, execute_result,object_version_number FROM asgard_quartz_task_instance
     WHERE task_id = #{taskId}
     ORDER BY CREATION_DATE DESC
     LIMIT 1
    </select>

    <select id="selectLastInstance" databaseId="oracle" resultType="io.choerodon.asgard.infra.dto.QuartzTaskInstanceDTO">
    <![CDATA[


      SELECT * FROM (
         SELECT id, status, actual_start_time, execute_result FROM asgard_quartz_task_instance
         WHERE task_id = #{taskId}
         ORDER BY CREATION_DATE DESC
      ) WHERE ROWNUM <= 1


        ]]>
    </select>

    <select id="fulltextSearch" resultType="io.choerodon.asgard.api.vo.ScheduleTaskInstance">
        SELECT
        id,
        status,
        task_name AS taskName,
        exception_message,
        planned_start_time ,
        actual_start_time,
        actual_last_time,
        planned_next_time
        FROM asgard_quartz_task_instance
        WHERE 1 = 1
        <if test="taskName != null">
            AND task_name LIKE concat(concat('%',#{taskName}),'%')
        </if>
        <if test="status != null">
            AND status LIKE concat(concat('%',#{status}),'%')
        </if>

        <if test="exceptionMessage != null">
            AND exception_message LIKE concat(concat('%',#{exceptionMessage}),'%')
        </if>

        <if test="level != null">
            AND fd_level = #{level}
        </if>

        <if test="sourceId != null">
            AND source_id = #{sourceId}
        </if>

        <if test="params != null">
            AND (
            task_name LIKE concat(concat('%',#{params}),'%') OR
            exception_message LIKE concat(concat('%',#{params}),'%') OR
            status LIKE concat(concat('%',#{params}),'%')
            )
        </if>
        order by id desc
    </select>

    <select id="pollBathByMethod" resultType="io.choerodon.asgard.api.vo.PollScheduleTaskInstance"
            flushCache="true">
        SELECT
        aqti.id, aqti.execute_method AS method, aqti.execute_params,
        aqti.instance_lock, aqti.object_version_number,
        aqt.execute_strategy, aqt.user_details AS user_details_json,
        aqti.task_id
        FROM asgard_quartz_task_instance aqti
        INNER JOIN asgard_quartz_task aqt on aqt.id = aqti.task_id
        WHERE aqti.status = 'RUNNING' AND aqti.execute_method = #{method}
    </select>

    <update id="lockByInstanceAndUpdateStartTime">
        UPDATE asgard_quartz_task_instance
        SET instance_lock = #{instance}, object_version_number = object_version_number + 1
        <if test="time != null">
            , actual_start_time = #{time}
        </if>
        WHERE id = #{id} AND instance_lock IS NULL AND object_version_number = #{number}
    </update>

    <update id="unlockByInstance" parameterType="java.lang.String">
        UPDATE asgard_saga_task_instance
        SET  instance_lock = NULL, object_version_number = object_version_number + 1
        WHERE instance_lock = #{instance} AND status = 'RUNNING'
    </update>


    <select id="selectByTaskId" resultType="io.choerodon.asgard.api.vo.ScheduleTaskInstanceLog">
        SELECT
        aqti.ID AS id,
        aqti. STATUS AS STATUS,
        aqti.ACTUAL_START_TIME AS actualStartTime,
        aqti.PLANNED_START_TIME AS plannedStartTime,
        concat(
        concat(tmp.SERVICE, ":"),
        aqti.INSTANCE_LOCK
        ) AS serviceInstanceId,
        aqti.EXCEPTION_MESSAGE as exceptionMessage
        FROM
        asgard_quartz_task_instance aqti
        LEFT JOIN (
        SELECT
        aqm.SERVICE,
        aqt.ID
        FROM
        asgard_quartz_method aqm
        LEFT JOIN asgard_quartz_task aqt ON aqm. CODE = aqt.EXECUTE_METHOD
        ) tmp ON aqti.TASK_ID = tmp.ID
        WHERE
        1 = 1
        <if test="taskId != null">
            AND aqti.TASK_ID = #{taskId}
        </if>
        <if test="status != null">
            AND aqti.STATUS LIKE concat(concat('%',#{status}),'%')
        </if>

        <if test="level != null">
            AND aqti.fd_level = #{level}
        </if>

        <if test="sourceId != null">
            AND aqti.source_id = #{sourceId}
        </if>

        <if test="serviceInstanceId != null">
            AND concat(
            concat(tmp.SERVICE, ":"),
            aqti.INSTANCE_LOCK
            ) LIKE concat(concat('%',#{serviceInstanceId}),'%')
        </if>

        <if test="params != null">
            AND (
            concat(
            concat(tmp.service, ":"),
            aqti.INSTANCE_LOCK
            ) LIKE concat(concat('%',#{params}),'%') OR
            status LIKE concat(concat('%',#{params}),'%')
            )
        </if>

        order by aqti.id desc
    </select>
</mapper>
